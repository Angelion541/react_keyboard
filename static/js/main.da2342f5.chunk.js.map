{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","outputPresedKey","event","window","console","log","key","length","setState","document","addEventListener","this","removeEventListener","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,2BAFhB,EAaEC,gBAAkB,SAACC,GACjBC,OAAOC,QAAQC,IAAI,EAAKN,MAAMC,YAC1BE,EAAMI,IAAIC,OAAS,IACrB,EAAKC,SAAS,CAAER,WAAW,2BAAD,OAA6BE,EAAMI,OAC7DH,OAAOC,QAAQC,IAAI,EAAKN,MAAMC,cAjBpC,uDAKE,WACES,SAASC,iBAAiB,QAASC,KAAKV,mBAN5C,kCASE,WACEQ,SAASG,oBAAoB,QAASD,KAAKV,mBAV/C,oBAqBE,WACE,OACE,4BAAIU,KAAKZ,MAAMC,iBAvBrB,GAAyBa,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.da2342f5.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.outputPresedKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.outputPresedKey);\n  }\n\n  outputPresedKey = (event: KeyboardEvent) => {\n    window.console.log(this.state.pressedKey);\n    if (event.key.length > 0) {\n      this.setState({ pressedKey: `The last pressed key is ${event.key}` });\n      window.console.log(this.state.pressedKey);\n    }\n  };\n\n  render() {\n    return (\n      <p>{this.state.pressedKey}</p>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}