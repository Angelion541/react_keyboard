{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","outputPresedKey","event","window","console","log","key","setState","this","document","addEventListener","removeEventListener","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,2BAFhB,EAcEC,gBAAkB,SAACC,GACjBC,OAAOC,QAAQC,IAAIH,EAAMI,KACzB,EAAKC,SAAS,CAAEP,WAAW,2BAAD,OAA2C,MAAdE,EAAMI,IAAcJ,EAAMI,IAAM,WACvFH,OAAOC,QAAQC,IAAI,EAAKN,MAAMC,aAjBlC,uDAKE,WACEG,OAAOC,QAAQC,IAAIG,KAAKT,MAAMC,YAC9BS,SAASC,iBAAiB,QAASF,KAAKP,mBAP5C,kCAUE,WACEQ,SAASE,oBAAoB,QAASH,KAAKP,mBAX/C,oBAoBE,WACE,OACE,4BAAIO,KAAKT,MAAMC,iBAtBrB,GAAyBY,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.ec76b3db.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    window.console.log(this.state.pressedKey);\n    document.addEventListener('keyup', this.outputPresedKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.outputPresedKey);\n  }\n\n  outputPresedKey = (event: KeyboardEvent) => {\n    window.console.log(event.key);\n    this.setState({ pressedKey: `The last pressed key is ${event.key !== ' ' ? event.key : 'space'}` });\n    window.console.log(this.state.pressedKey);\n  };\n\n  render() {\n    return (\n      <p>{this.state.pressedKey}</p>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}